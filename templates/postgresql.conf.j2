{# Synchronize with changes in https://github.com/postgres/postgres/blob/master/src/backend/utils/misc/postgresql.conf.sample #}
{% macro bool(value) -%}
{{ 'on' if value | bool else 'off' }}
{%- endmacro %}
# {{ ansible_managed }}
# ---------------------------------
# PostgreSQL 9.4 configuration file
# ---------------------------------
#
# This file consists of lines of the form:
#
#   name = value
#
# (The "=" is optional.)  Whitespace may be used.  Comments are introduced with
# "#" anywhere on a line.  The complete list of parameter names and allowed
# values can be found in the PostgreSQL documentation.
#
# The commented-out settings shown in this file represent the default values.
# Re-commenting a setting is NOT sufficient to revert it to the default value;
# you need to reload the server.
#
# This file is read on server startup and when the server receives a SIGHUP
# signal.  If you edit the file on a running system, you have to SIGHUP the
# server for the changes to take effect, or use "pg_ctl reload".  Some
# parameters, which are marked below, require a server shutdown and restart to
# take effect.
#
# Any parameter can also be given as a command-line option to the server, e.g.,
# "postgres -c log_connections=on".  Some parameters can be changed at run time
# with the "SET" SQL command.
#
# Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
#                MB = megabytes                     s   = seconds
#                GB = gigabytes                     min = minutes
#                TB = terabytes                     h   = hours
#                                                   d   = days


#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

# The default values of these variables are driven from the -D command-line
# option or PGDATA environment variable, represented here as ConfigDir.

# Changes in this section requires restart.

# Use data in another directory.
#data_directory = 'ConfigDir'

# Host-based authentication file.
#hba_file = 'ConfigDir/pg_hba.conf'

# Ident configuration file.
#ident_file = 'ConfigDir/pg_ident.conf'

# If external_pid_file is not explicitly set, no extra PID file is written.
#external_pid_file = ''


#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# - Connection Settings -

# Changes in this section requires restart!

# Comma-separated list of IP addresses to listen on.
# Defaults to 'localhost'; use '*' for all.
listen_addresses = '{{ postgresql_listen_addresses|join(",") }}'

port = {{ postgresql_port }}

# Maximum number of concurrent connections to the database server.
# Note: Increasing max_connections costs ~400 bytes of shared memory per
# connection slot, plus lock space (see max_locks_per_transaction).
max_connections = {{ postgresql_max_connections }}

#superuser_reserved_connections = 3

# Comma-separated list of directories.
#unix_socket_directories = '/run/postgresql'

# Owning group of the unix socket.
unix_socket_group = '{{ postgresql_unix_socket_group }}'

# Access permissions of the unix socket (begin with 0 to use octal notation).
unix_socket_permissions = {{ postgresql_unix_socket_permissions }}


# - Security and Authentication -

# Changes in this section requires restart!

# 1s-600s
#authentication_timeout = 1min

#ssl = off

# Allowed SSL ciphers.
#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'

#ssl_prefer_server_ciphers = on
#ssl_ecdh_curve = 'prime256v1'

# Amount of data between renegotiations.
#ssl_renegotiation_limit = 512MB

#ssl_cert_file = 'server.crt'
#ssl_key_file = 'server.key'
#ssl_ca_file = ''
#ssl_crl_file = ''

#password_encryption = on
#db_user_namespace = off

# GSSAPI using Kerberos
#krb_server_keyfile = ''
#krb_caseins_users = off


# - TCP Keepalives -
# See "man 7 tcp" for details.

# TCP_KEEPIDLE in seconds; 0 selects the system default.
#tcp_keepalives_idle = 0

# TCP_KEEPINTVL in seconds; 0 selects the system default.
#tcp_keepalives_interval = 0

# TCP_KEEPCNT; 0 selects the system default.
#tcp_keepalives_count = 0


#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# - Memory -

# Amount of memory the database server uses for shared memory buffers.
# min 128kB; change requires restart!
shared_buffers = {{ postgresql_shared_buffers }}

# Enables/disables the use of huge memory pages. Change requires restart!
# Options: on, off, or try.
#huge_pages = try

# Maximum number of temporary buffers used by each database session.
# min 800kB
temp_buffers = {{ postgresql_temp_buffers }}

# Maximum number of transactions that can be in the "prepared" state
# simultaneously. Zero disables the feature. Change requires restart!
#
# Note: Increasing max_prepared_transactions costs ~600 bytes of shared memory
# per transaction slot, plus lock space (see max_locks_per_transaction).
# It is not advisable to set max_prepared_transactions nonzero unless you
# actively intend to use prepared transactions.
#max_prepared_transactions = 0

# Amount of memory to be used by internal sort operations and hash tables
# before writing to temporary disk files.
# min 64kB
work_mem = {{ postgresql_work_mem }}

# Maximum amount of memory to be used by maintenance operations, such as
# VACUUM, CREATE INDEX, and ALTER TABLE ADD FOREIGN KEY.
# min 1MB
maintenance_work_mem = {{ postgresql_maintenance_work_mem }}

# Maximum amount of memory to be used by each autovacuum worker process.
# min 1MB, or -1 to use maintenance_work_mem
autovacuum_work_mem = -1

# Maximum safe depth of the server's execution stack.
# min 100kB
max_stack_depth = {{ postgresql_max_stack_depth }}

# Dynamic shared memory implementation that the server should use:
#   posix    - for POSIX shared memory allocated using shm_open
#   sysv     - for System V shared memory allocated via shmget
#   windows  - for Windows shared memory
#   mmap     - simulate using memory-mapped files stored in the data dir
#   none     - disable dynamic shared memory
dynamic_shared_memory_type = posix


# - Disk -

# Limits per-session temp file space; in kB, or -1 for no limit.
#temp_file_limit = -1


# - Kernel Resource Usage -

# min 25; change requires restart!
#max_files_per_process = 1000

# Change requires restart!
#shared_preload_libraries = ''


# - Cost-Based Vacuum Delay -

# 0-100 milliseconds
#vacuum_cost_delay = 0

# 0-10000 credits
#vacuum_cost_page_hit = 1

# 0-10000 credits
#vacuum_cost_page_miss = 10

# 0-10000 credits
#vacuum_cost_page_dirty = 20

# 1-10000 credits
#vacuum_cost_limit = 200


# - Background Writer -

# 10-10000ms between rounds
#bgwriter_delay = 200ms

# 0-1000 max buffers written/round
#bgwriter_lru_maxpages = 100

# 0-10.0 multipler on buffers scanned/round
#bgwriter_lru_multiplier = 2.0


# - Asynchronous Behavior -

# 1-1000; 0 disables prefetching
#effective_io_concurrency = 1

#max_worker_processes = 8


#------------------------------------------------------------------------------
# WRITE AHEAD LOG
#------------------------------------------------------------------------------

# - Settings -

# Options: minimal, archive, hot_standby, or logical
# Change requires restart!
#wal_level = minimal

# Rurns forced synchronization on or off.
#fsync = on

# Synchronization level: off, local, remote_write, or on.
#synchronous_commit = on

# Supported by the operating system:
#   open_datasync
#   fdatasync (default on Linux)
#   fsync
#   fsync_writethrough
#   open_sync
#wal_sync_method = fsync

# Recover from partial page writes.
#full_page_writes = on

# Also do full page writes of non-critical updates. Change requires restart!
#wal_log_hints = off

# min 32kB, -1 sets based on shared_buffers
# Change requires restart!
#wal_buffers = -1

# 1-10000 milliseconds
#wal_writer_delay = 200ms

# range 0-100000, in microseconds
#commit_delay = 0

# range 1-1000
#commit_siblings = 5


# - Checkpoints -

# in logfile segments, min 1, 16MB each
#checkpoint_segments = 3

# range 30s-1h
#checkpoint_timeout = 5min

# Checkpoint target duration; 0.0 - 1.0.
#checkpoint_completion_target = 0.5

# 0 disables
#checkpoint_warning = 30s


# - Archiving -

# Allows archiving to be done. Change requires restart!
#archive_mode = off

# Command to use to archive a logfile segment.
# Placeholders: %p = path of file to archive
#               %f = file name only
# Example: 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
#archive_command = ''

# Force a logfile segment switch after this.
# Number of seconds; 0 disables.
#archive_timeout = 0


#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------

# - Sending Server(s) -

# Set these on the master and on any standby that will send replication data.

# Maximum number of walsender processes. Change requires restart!
#max_wal_senders = 0

# in logfile segments, 16MB each; 0 disables
#wal_keep_segments = 0

# in milliseconds; 0 disables
#wal_sender_timeout = 60s

# Maximum number of replication slots. Change requires restart!
#max_replication_slots = 0


# - Master Server -

# These settings are ignored on a standby server.

# Standby servers that provide sync rep.
# Comma-separated list of application_name from standby(s); '*' = all
#synchronous_standby_names = ''

# Number of xacts by which cleanup is delayed.
#vacuum_defer_cleanup_age = 0


# - Standby Servers -

# These settings are ignored on a master server.

# Value "on" allows queries during recovery. Change requires restart!
#hot_standby = off

# Max delay before canceling queries when reading WAL from archive;
# -1 allows indefinite delay.
#max_standby_archive_delay = 30s

# Max delay before canceling queries when reading streaming WAL.
# -1 allows indefinite delay.
#max_standby_streaming_delay = 30s

# Send replies at least this often; 0 disables.
#wal_receiver_status_interval = 10s

# Send info from standby to prevent query conflicts.
#hot_standby_feedback = off

# Time that receiver waits for communication from master in milliseconds;
# 0 disables.
#wal_receiver_timeout = 60s


#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# - Planner Method Configuration -

#enable_bitmapscan = on
#enable_hashagg = on
#enable_hashjoin = on
#enable_indexscan = on
#enable_indexonlyscan = on
#enable_material = on
#enable_mergejoin = on
#enable_nestloop = on
#enable_seqscan = on
#enable_sort = on
#enable_tidscan = on


# - Planner Cost Constants -

# Measured on an arbitrary scale.

#seq_page_cost = 1.0
#random_page_cost = 4.0
#cpu_tuple_cost = 0.01
#cpu_index_tuple_cost = 0.005
#cpu_operator_cost = 0.0025

#effective_cache_size = 4GB


# - Genetic Query Optimizer -

#geqo = on

#geqo_threshold = 12

# range 1-10
#geqo_effort = 5

# Selects default based on effort.
#geqo_pool_size = 0

# Selects default based on effort.
#geqo_generations = 0

# range 1.5-2.0
#geqo_selection_bias = 2.0

# range 0.0-1.0
#geqo_seed = 0.0


# - Other Planner Options -

# range 1-10000
#default_statistics_target = 100

# on, off, or partition
#constraint_exclusion = partition

# range 0.0-1.0
#cursor_tuple_fraction = 0.1

#from_collapse_limit = 8

# 1 disables collapsing of explicit JOIN clauses
#join_collapse_limit = 8


#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# - Where to Log -

# Valid values are combinations of stderr, csvlog, syslog, and eventlog,
# depending on platform. Value 'csvlog' requires logging_collector to be on.
log_destination = '{{ postgresql_log_destination }}'

# This is used when logging to stderr:

# Enable capturing of stderr and csvlog into log files. Required to be on for
# csvlogs. Change requires restart!
logging_collector = {{ bool(postgresql_logging_collector) }}

# These are only used if logging_collector is on:

# Directory where log files are written, can be absolute or relative to PGDATA.
log_directory = '{{ postgresql_log_dir }}'

# Log file name pattern, can include strftime() escapes.
log_filename = '{{ postgresql_log_filename }}'

# Creation mode for log files, begin with 0 to use octal notation.
#log_file_mode = 0600

# If on, an existing log file with the same name as the new log file will be
# truncated rather than appended to. But such truncation only occurs on
# time-driven rotation, not on restarts or size-driven rotation.  Default is
# off, meaning append to existing files in all cases.
#log_truncate_on_rotation = off

# Automatic rotation of logfiles will happen after that time. 0 disables.
#log_rotation_age = 1d

# Automatic rotation of logfiles will happen after that much log output;
# 0 disables.
#log_rotation_size = 10MB

# These are relevant when logging to syslog:

#syslog_facility = 'LOCAL0'
#syslog_ident = 'postgres'


# - When to Log -

# Values in order of decreasing detail:
#   debug5, debug4, debug3, debug2, debug1, log, notice, warning. error
client_min_messages = {{ postgresql_client_min_messages }}

# Values in order of decreasing detail:
#   debug5, debug4, debug3, debug2, debug1, info, notice, warning, error, log,
#   fatal, panic
log_min_messages = {{ postgresql_log_min_messages }}

# Values in order of decreasing detail:
#   debug5, debug4, debug3, debug2, debug1, info, notice, warning, error, log,
#   fatal, panic (effectively off)
log_min_error_statement = {{ postgresql_log_min_error_statement }}

# -1 is disabled, 0 logs all statements and their durations,
# > 0 logs only statements running at least this number of milliseconds
log_min_duration_statement = {{ postgresql_log_min_duration_statement }}


# - What to Log -

#debug_print_parse = off
#debug_print_rewritten = off
#debug_print_plan = off
#debug_pretty_print = on

#log_checkpoints = off
#log_connections = off
#log_disconnections = off
#log_duration = off
#log_hostname = off

# terse, default, or verbose messages
#log_error_verbosity = default

# Special values:
#   %a = application name
#   %u = user name
#   %d = database name
#   %r = remote host and port
#   %h = remote host
#   %p = process ID
#   %t = timestamp without milliseconds
#   %m = timestamp with milliseconds
#   %i = command tag
#   %e = SQL state
#   %c = session ID
#   %l = session line number
#   %s = session start timestamp
#   %v = virtual transaction ID
#   %x = transaction ID (0 if none)
#   %q = stop here in non-session
#        processes
#   %% = '%'
# Example: '<%u%%%d> '
log_line_prefix = '{{ postgresql_log_line_prefix }}'

# Log lock waits >= deadlock_timeout
#log_lock_waits = off

# none, ddl, mod, all
log_statement = '{{ postgresql_log_statement }}'

# Log temporary files equal or larger than the specified size in kilobytes;
# -1 disables, 0 logs all temp files.
#log_temp_files = -1

log_timezone = '{{ postgresql_timezone }}'


#------------------------------------------------------------------------------
# RUNTIME STATISTICS
#------------------------------------------------------------------------------

# - Query/Index Statistics Collector -

#track_activities = on

#track_counts = on

#track_io_timing = off

#none, pl, all

#track_functions = none

# Change requires restart!
#track_activity_query_size = 1024

#update_process_title = on

#stats_temp_directory = 'pg_stat_tmp'


# - Statistics Monitoring -

#log_parser_stats = off
#log_planner_stats = off
#log_executor_stats = off
#log_statement_stats = off


#------------------------------------------------------------------------------
# AUTOVACUUM PARAMETERS
#------------------------------------------------------------------------------

# Enable autovacuum subprocess? 'on'
# Requires track_counts to also be on.
#autovacuum = on

# -1 disables, 0 logs all actions and their durations,
# > 0 logs only actions running at least this number of milliseconds.
#log_autovacuum_min_duration = -1

# Max number of autovacuum subprocesses. Change requires restart!
#autovacuum_max_workers = 3

# time between autovacuum runs
#autovacuum_naptime = 1min

# Min number of row updates before vacuum.
#autovacuum_vacuum_threshold = 50

# Min number of row updates before analyze.
#autovacuum_analyze_threshold = 50

# Fraction of table size before vacuum.
#autovacuum_vacuum_scale_factor = 0.2

# Fraction of table size before analyze.
#autovacuum_analyze_scale_factor = 0.1

# Maximum XID age before forced vacuum. Change requires restart!
#autovacuum_freeze_max_age = 200000000

# Maximum multixact age before forced vacuum. Change requires restart!
#autovacuum_multixact_freeze_max_age = 400000000

# Default vacuum cost delay for autovacuum, in milliseconds;
# -1 means use vacuum_cost_delay.
#autovacuum_vacuum_cost_delay = 20ms

# Default vacuum cost limit for autovacuum, -1 means use vacuum_cost_limit.
#autovacuum_vacuum_cost_limit = -1


#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# - Statement Behavior -

# Schema names.
#search_path = '"$user",public'

# A tablespace name, '' uses the default.
#default_tablespace = ''

# A list of tablespace names, '' uses only default tablespace.
#temp_tablespaces = ''

#check_function_bodies = on

#default_transaction_isolation = 'read committed'

#default_transaction_read_only = off

#default_transaction_deferrable = off

#session_replication_role = 'origin'

# in milliseconds, 0 is disabled
#statement_timeout = 0

# in milliseconds, 0 is disabled
#lock_timeout = 0

#vacuum_freeze_min_age = 50000000

#vacuum_freeze_table_age = 150000000

#vacuum_multixact_freeze_min_age = 5000000

#vacuum_multixact_freeze_table_age = 150000000

# hex, escape
#bytea_output = 'hex'

#xmlbinary = 'base64'

#xmloption = 'content'


# - Locale and Formatting -

datestyle = 'iso, mdy'

#intervalstyle = 'postgres'

timezone = '{{ postgresql_timezone }}'

# Select the set of available time zone abbreviations. Currently there are:
#   Default
#   Australia
#   India
# You can create your own file in share/timezonesets/.
#timezone_abbreviations = 'Default'

# min -15, max 3
#extra_float_digits = 0

# Actually, defaults to database encoding.
#client_encoding = sql_ascii

# These settings are initialized by initdb, but they can be changed.

# Locale for system error message strings.
lc_messages = '{{ postgresql_lc_messages }}'

# Locale for monetary formatting.
lc_monetary = '{{ postgresql_lc_monetary }} '

# Locale for number formatting.
lc_numeric = '{{ postgresql_lc_numeric }}'

# Locale for time formatting.
lc_time = '{{ postgresql_lc_time }}'

# Default configuration for text search.
default_text_search_config = '{{ postgresql_default_text_search_config }}'


# - Other Defaults -

#dynamic_library_path = '$libdir'

#local_preload_libraries = ''
#session_preload_libraries = ''


#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------

#deadlock_timeout = 1s

# min 10; change requires restart!
# Note: Each lock table slot uses ~270 bytes of shared memory, and there are
# max_locks_per_transaction * (max_connections + max_prepared_transactions)
# lock table slots.
#max_locks_per_transaction = 64

# min 10; change requires restart!
#max_pred_locks_per_transaction = 64


#------------------------------------------------------------------------------
# VERSION/PLATFORM COMPATIBILITY
#------------------------------------------------------------------------------

# - Previous PostgreSQL Versions -

#array_nulls = on

# on, off, or safe encoding
#backslash_quote = safe_encoding

#default_with_oids = off

#escape_string_warning = on

#lo_compat_privileges = off

#quote_all_identifiers = off

#sql_inheritance = on

#standard_conforming_strings = on

#synchronize_seqscans = on


# - Other Platforms and Clients -

#transform_null_equals = off


#------------------------------------------------------------------------------
# ERROR HANDLING
#------------------------------------------------------------------------------

# Terminate session on any error?
#exit_on_error = off

# Reinitialize after backend crash?
#restart_after_crash = on


#------------------------------------------------------------------------------
# CONFIG FILE INCLUDES
#------------------------------------------------------------------------------

# These options allow settings to be loaded from files other than the
# default postgresql.conf.

# Include files ending in '.conf' from directory 'conf.d'.
#include_dir = 'conf.d'

# Include file only if it exists.
#include_if_exists = 'exists.conf'

# Include file.
#include = 'special.conf'


#------------------------------------------------------------------------------
# CUSTOMIZED OPTIONS
#------------------------------------------------------------------------------

# Add settings for extensions here
